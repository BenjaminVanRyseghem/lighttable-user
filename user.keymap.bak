;; User keymap
;; -----------------------------
;; Keymaps are stored as a set of diffs that are merged together to create
;; the final set of keys. You can modify these diffs to either add or
;; subtract bindings.
;;
;; Like behaviors, keys are bound by tag. When objects with those tags are active
;; the key bindings are live. Keys can be bound to any number of Light Table commands,
;; allowing you the flexibility to execute multiple operations together. To see a list
;; of all the commands you can execute, start typing a word related to the thing you
;; want to do in between the square brackets (e.g. type "editor").

{:+ {:app {
           "pmeta-shift-a" [:show-commandbar-transient]
           "pmeta-ctrl-shift-d" [:docs.search.show]
           }

     :editor {"alt-esc" [:clear-inline-results]
              "alt-shift-down" [:editor.sublime.swapLineDown]
              "alt-shift-up" [:editor.sublime.swapLineUp]
              ;;               "alt-shift-up" [:editor.sublime.selectScope]
              "alt-shift-w" [:editor.watch.unwatch]
              "alt-tab" [:snippet.by_token]
              "alt-up" [:editor.sublime.selectNextOccurrence]
              "alt-w" [:editor.watch.watch-selection]
              "cmd-/" [ :toggle-comment-selection
                        :editor.line-down ]
              "cmd-[" [:paredit-plus.wrap-square]
              "cmd-backspace" [:editor.delete-line]
              "cmd-shift-'" [:paredit-plus.wrap-quote]
              "cmd-shift-8" [:editor.sublime.splitSelectionByLine]
              "cmd-shift-9" [:paredit-plus.wrap-round]
              "cmd-shift-[" [:paredit-plus.wrap-curly]
              "cmd-shift-d" [:editor.sublime.duplicateLine]
              "ctrl-d" [:editor.doc.toggle]
              "ctrl-g" [:editor.sublime.selectNextOccurrence]
              "ctrl-left" [:editor.sublime.goToBracket]
              "ctrl-right" [:editor.sublime.goToBracket]
              "ctrl-shift-left" [:subpar.shrink.right
                                 :editor.char-left
                                 :paredit.select.clear]
              "ctrl-shift-right" [:subpar.grow.right]
              "ctrl-shift-s" [:editor.sublime.sortLines]
              "ctrl-shift-up" [:paredit-plus.splice-sexp]
              "shift-esc" [:clear-console]
              "shift-forward-delete" [:editor.delete-group-right]}}}
